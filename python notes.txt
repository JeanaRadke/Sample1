phrase = "Giraffe\nAcademy"
print(phrase.upper().isupper())
print(len(phrase))
print(phrase[0])
print(phrase.index("G"))
print(phrase.replace("Giraffe", "Elephant"))

print(2)
print(10 % 3)
print("the line above uses percent to represent MOD")
my_num = 5
print(str(my_num) + " my favorite number")

from math import *

my_num = -5
print(abs(my_num))
print(pow(3, 2))
print(max(4, 6))
print(min(4, 6))
print(round(3.2))
print(floor(3.7))
print(ceil(3.7))
print(sqrt(36))

//user input//
name = input("Enter you name: ")
age = input("Enter you age: ")
print("Hello " + name + "! Your are " + age)

//simple calculator//
num1 = input("Enter a number: ")
num2 = input("Enter another number: ")
result = float(num1) + float(num2)
print(result)

//better calculator//
num1 = float(input("Enter first number: "))
op = (input("Enter operator: "))
num2 = float(input("Enter second number: "))

if op == "+":
    print(num1 + num2)
elif op == "-":
    print (num1 - num2)
elif op == "/":
    print(num1 / num2)
elif op == "*":
    print(num1 * num2)
else:
    print("Invalid operator")



//mad libs app//
color = input("Enter a color")
plural_noun = input("Enter a plural noun")
celebrity = input("Enter a celebrity")

print("Roses are " + color)
print(plural_noun + " are blue")
print("I love " + celebrity)

//lists//
friends = ["Kevin", "Karen", "Jim", "Toby"]
print(friends)
print(friends[0])
print(friends[-1])
print(friends[1:])
print(friends[1:3])
friends[1] = "Jeana"
print(friends)


lucky_numbers = [4, 8, 15, 16, 23, 42]
friends = ["Kevin", "Karen", "Jim", "Jim", "Oscar", "Toby"]
friends.extend(lucky_numbers)
friends.append("Creed")
friends.insert(1, "Kelly")
friends.remove("Jim")
friends.pop()

print(friends)
print(friends.index("Oscar"))
print(friends.count("Jim"))
lucky_numbers.sort()
print(lucky_numbers)

friends2 = friends.copy()

//Tuples are immutable (cannot modify or add to)//

coordinates = (4, 5)
print(coordinates[0])



def sayhi(name):
    print("Hello " + name)

sayhi("Jeana")
sayhi("Charlie")

def cube(num):
    return num*num*num

result = cube(4)
print(cube(3))
print(result)

//Booleans//

is_male = False
is_tall = True

if is_male and is_tall:
    print("You are a tall male")
elif is_male and not(is_tall):
    print("You are a short male")
elif not (is_male) and is_tall:
    print("You are not a male but you are tall")
else:
    print("You neither male nor tall")



def max_num(num1, num2, num3):
    if num1>= num2 and num1 >= num3:
        return num1
    elif num2 >= num1 and num2 >=num3:
        return num2
    else:
        return num3

print(max_num(3, 4, 5))


//Dictionaries//
monthConversions = {
    "Jan": "January",
    "Feb": "February",
    "Mar": "March",
    "Apr": "April",
    "May": "May",
    "Jun": "June",
    "Jul": "July",
    "Aug": "August",
    "Sep": "September",
    "Oct": "October",
    "Nov": "November",
    "Dec": "December",
}
print(monthConversions["Nov"])
print(monthConversions.get("Dec"))
print(monthConversions.get("woah", "Nor a valid key"))

//while loops//

i = 1
while i <= 10:
    print(i)
    i += 1
print("Done with loop")

//guessing game//

secret_word = "giraffe"
guess = ""
guess_count = 0
guess_limit = 3
out_of_guesses = False

while guess != secret_word and not(out_of_guesses):
    if guess_count < guess_limit:
        guess = input("Enter guess: ")
        guess_count += 1
    else:
        out_of_guesses = True

if out_of_guesses:
    print("Out of Guesses, YOU LOSE!")
else:
    print("You win!")

//for statements//
friends = ["Jim", "Karen", "Kevin"]

for index in range(len(friends)):
    print(index)
    print(friends[index])

for index in range(5):
    if index == 0:
        print("first Iteration")
    else:
        print("Not first")

//raising number to a power//
def raise_to_power(base_num, pow_num):
    result = 1
    for index in range(pow_num):
        result = result * base_num
    return result
print(raise_to_power(3, 4))

//nested for loops using an array//

number_grid = [
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9],
    [0]
]
print(number_grid[0][0])
print(number_grid[2][1])
for row in number_grid:
    for col in row:
        print(col)


//translation app//
def translate(phrase):
    translation = ""
    for letter in phrase:
        if letter.lower() in "aeiou":
            if letter.isupper():
                translation = translation + "G"
            else:
                translation = translation + "g"

        else:
            translation = translation + letter
    return translation

print(translate(input("Enter a phrase: ")))


# Developer comment
'''
this is another way to make comments
'''
print("Comments are fun")


//try for exceptions//
try:
    answer = 10/0
    number = int(input("Enter a number: "))
    print(number)
except ZeroDivisionError as err:
    print(err)
except ValueError:
    print("Invalid input")

****Creating/Editing files with python****
blog_file = open("sample blog project.txt", "r")
print(blog_file.readlines())

blog_file.close()

2nd example:
blog_file = open("index.html", "w")

blog_file.write("<p>This is HTML</p>") 

blog_file.close()



//creating Class (open new file first)//
class Student:

    def __init__(self, name, major, gpa, is_on_probation):
        self.name = name
        self.major = major
        self.gpa = gpa
        self.is_on_probation = is_on_probation

#Then for the main file (app.py)
from student import Student

student1 = Student("Jim", "Business", 3.1, False)
student2 = Student("Pam", "Art", 2.5, True)

print(student1.name)
print(student2.gpa)

//Test creating (start with new file for class:)
class Question:
    def __init__(self, prompt, answer):
        self.prompt = prompt
        self.answer = answer
#then back to (app.py)
from Question import Question

question_prompts = [
    "What color are apples?\n(a) Red/Green\n(b) Purple\n(c) Orange\n\n:",
    "What color are Bananas?\n(a) Teal\n(b) Magenta\n(c) Yellow\n\n",
    "What color are strawberries?\n(a) Yellow\n(b) Red\n(c) Blue\n\n"
]
questions = [
    Question(question_prompts[0], "a"),
    Question(question_prompts[1], "c"),
    Question(question_prompts[2], "b"),
]

def run_test(questions):
    score = 0
    for question in questions:
        answer = input(question.prompt)
        if answer == question.answer:
            score += 1

    print("You got " + str(score) + "/" + str(len(questions)) + " correct")

run_test(questions)


//more student Class samples (start in class document)
class Student:

    def __init__(self, name, major, gpa):
        self.name = name
        self.major = major
        self.gpa = gpa

    def on_honor_roll(self):
        if self.gpa >= 3.5:
            return True
        else:
            return False

# back to the (app.py)
from student import Student

student1 = Student("Oscar", "Accounting", 3.1)
student2 = Student("Phylis", "Business", 3.6)

print(student1.on_honor_roll())


//using one class to reference another class CHEF EXAMPLE//
docs created Chef and ChineseChef.py THEN back to app.py
from Chef import Chef
from ChineseChef import ChineseChef


myChef = Chef()
myChef.make_chicken()
myChef.make_special_dish()

myChineseChef = ChineseChef()
myChineseChef.make_fried_rice()
myChineseChef.make_special_dish()



